// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

import {ObjectMeta} from "../meta/v1";

export namespace argoproj {
    export namespace v1alpha1 {
        export interface RolloutSpec {
            minReadySeconds?: pulumi.Input<number>;
            paused?: pulumi.Input<boolean>;
            progressDeadlineSeconds?: pulumi.Input<number>;
            replicas?: pulumi.Input<number>;
            restartAt?: pulumi.Input<string>;
            revisionHistoryLimit?: pulumi.Input<number>;
            selector: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecSelector>;
            strategy?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategy>;
            template: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplate>;
        }

        export interface RolloutSpecSelector {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecSelectorMatchExpressions>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RolloutSpecSelectorMatchExpressions {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecStrategy {
            blueGreen?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyBlueGreen>;
            canary?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanary>;
        }

        export interface RolloutSpecStrategyBlueGreen {
            activeService: pulumi.Input<string>;
            antiAffinity?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyBlueGreenAntiAffinity>;
            autoPromotionEnabled?: pulumi.Input<boolean>;
            autoPromotionSeconds?: pulumi.Input<number>;
            postPromotionAnalysis?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyBlueGreenPostPromotionAnalysis>;
            prePromotionAnalysis?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyBlueGreenPrePromotionAnalysis>;
            previewReplicaCount?: pulumi.Input<number>;
            previewService?: pulumi.Input<string>;
            scaleDownDelayRevisionLimit?: pulumi.Input<number>;
            scaleDownDelaySeconds?: pulumi.Input<number>;
        }

        export interface RolloutSpecStrategyBlueGreenAntiAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyBlueGreenAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<{[key: string]: any}>;
        }

        export interface RolloutSpecStrategyBlueGreenAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            weight: pulumi.Input<number>;
        }

        export interface RolloutSpecStrategyBlueGreenPostPromotionAnalysis {
            args?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyBlueGreenPostPromotionAnalysisArgs>[]>;
            clusterScope?: pulumi.Input<boolean>;
            templateName?: pulumi.Input<string>;
            templates?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyBlueGreenPostPromotionAnalysisTemplates>[]>;
        }

        export interface RolloutSpecStrategyBlueGreenPostPromotionAnalysisArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyBlueGreenPostPromotionAnalysisArgsValueFrom>;
        }

        export interface RolloutSpecStrategyBlueGreenPostPromotionAnalysisArgsValueFrom {
            fieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyBlueGreenPostPromotionAnalysisArgsValueFromFieldRef>;
            podTemplateHashValue?: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyBlueGreenPostPromotionAnalysisArgsValueFromFieldRef {
            fieldPath: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyBlueGreenPostPromotionAnalysisTemplates {
            clusterScope?: pulumi.Input<boolean>;
            templateName?: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyBlueGreenPrePromotionAnalysis {
            args?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyBlueGreenPrePromotionAnalysisArgs>[]>;
            clusterScope?: pulumi.Input<boolean>;
            templateName?: pulumi.Input<string>;
            templates?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyBlueGreenPrePromotionAnalysisTemplates>[]>;
        }

        export interface RolloutSpecStrategyBlueGreenPrePromotionAnalysisArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyBlueGreenPrePromotionAnalysisArgsValueFrom>;
        }

        export interface RolloutSpecStrategyBlueGreenPrePromotionAnalysisArgsValueFrom {
            fieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyBlueGreenPrePromotionAnalysisArgsValueFromFieldRef>;
            podTemplateHashValue?: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyBlueGreenPrePromotionAnalysisArgsValueFromFieldRef {
            fieldPath: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyBlueGreenPrePromotionAnalysisTemplates {
            clusterScope?: pulumi.Input<boolean>;
            templateName?: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanary {
            analysis?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryAnalysis>;
            antiAffinity?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryAntiAffinity>;
            canaryMetadata?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryCanaryMetadata>;
            canaryService?: pulumi.Input<string>;
            maxSurge?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryMaxSurge>;
            maxUnavailable?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryMaxUnavailable>;
            stableMetadata?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStableMetadata>;
            stableService?: pulumi.Input<string>;
            steps?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanarySteps>[]>;
            trafficRouting?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryTrafficRouting>;
        }

        export interface RolloutSpecStrategyCanaryAnalysis {
            args?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryAnalysisArgs>[]>;
            clusterScope?: pulumi.Input<boolean>;
            startingStep?: pulumi.Input<number>;
            templateName?: pulumi.Input<string>;
            templates?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryAnalysisTemplates>[]>;
        }

        export interface RolloutSpecStrategyCanaryAnalysisArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryAnalysisArgsValueFrom>;
        }

        export interface RolloutSpecStrategyCanaryAnalysisArgsValueFrom {
            fieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryAnalysisArgsValueFromFieldRef>;
            podTemplateHashValue?: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryAnalysisArgsValueFromFieldRef {
            fieldPath: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryAnalysisTemplates {
            clusterScope?: pulumi.Input<boolean>;
            templateName?: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryAntiAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<{[key: string]: any}>;
        }

        export interface RolloutSpecStrategyCanaryAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            weight: pulumi.Input<number>;
        }

        export interface RolloutSpecStrategyCanaryCanaryMetadata {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RolloutSpecStrategyCanaryMaxSurge {
        }

        export interface RolloutSpecStrategyCanaryMaxUnavailable {
        }

        export interface RolloutSpecStrategyCanaryStableMetadata {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RolloutSpecStrategyCanarySteps {
            analysis?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsAnalysis>;
            experiment?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsExperiment>;
            pause?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsPause>;
            setCanaryScale?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsSetCanaryScale>;
            setWeight?: pulumi.Input<number>;
        }

        export interface RolloutSpecStrategyCanaryStepsAnalysis {
            args?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsAnalysisArgs>[]>;
            clusterScope?: pulumi.Input<boolean>;
            templateName?: pulumi.Input<string>;
            templates?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsAnalysisTemplates>[]>;
        }

        export interface RolloutSpecStrategyCanaryStepsAnalysisArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsAnalysisArgsValueFrom>;
        }

        export interface RolloutSpecStrategyCanaryStepsAnalysisArgsValueFrom {
            fieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsAnalysisArgsValueFromFieldRef>;
            podTemplateHashValue?: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryStepsAnalysisArgsValueFromFieldRef {
            fieldPath: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryStepsAnalysisTemplates {
            clusterScope?: pulumi.Input<boolean>;
            templateName?: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryStepsExperiment {
            analyses?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsExperimentAnalyses>[]>;
            duration?: pulumi.Input<string>;
            templates: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsExperimentTemplates>[]>;
        }

        export interface RolloutSpecStrategyCanaryStepsExperimentAnalyses {
            args?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsExperimentAnalysesArgs>[]>;
            clusterScope?: pulumi.Input<boolean>;
            name: pulumi.Input<string>;
            requiredForCompletion?: pulumi.Input<boolean>;
            templateName: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryStepsExperimentAnalysesArgs {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsExperimentAnalysesArgsValueFrom>;
        }

        export interface RolloutSpecStrategyCanaryStepsExperimentAnalysesArgsValueFrom {
            fieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsExperimentAnalysesArgsValueFromFieldRef>;
            podTemplateHashValue?: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryStepsExperimentAnalysesArgsValueFromFieldRef {
            fieldPath: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryStepsExperimentTemplates {
            metadata?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsExperimentTemplatesMetadata>;
            name: pulumi.Input<string>;
            replicas?: pulumi.Input<number>;
            selector?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsExperimentTemplatesSelector>;
            specRef: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryStepsExperimentTemplatesMetadata {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RolloutSpecStrategyCanaryStepsExperimentTemplatesSelector {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsExperimentTemplatesSelectorMatchExpressions>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RolloutSpecStrategyCanaryStepsExperimentTemplatesSelectorMatchExpressions {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecStrategyCanaryStepsPause {
            duration?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsPauseDuration>;
        }

        export interface RolloutSpecStrategyCanaryStepsPauseDuration {
        }

        export interface RolloutSpecStrategyCanaryStepsSetCanaryScale {
            matchTrafficWeight?: pulumi.Input<boolean>;
            replicas?: pulumi.Input<number>;
            weight?: pulumi.Input<number>;
        }

        export interface RolloutSpecStrategyCanaryTrafficRouting {
            alb?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryTrafficRoutingAlb>;
            istio?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryTrafficRoutingIstio>;
            nginx?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryTrafficRoutingNginx>;
            smi?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryTrafficRoutingSmi>;
        }

        export interface RolloutSpecStrategyCanaryTrafficRoutingAlb {
            annotationPrefix?: pulumi.Input<string>;
            ingress: pulumi.Input<string>;
            rootService?: pulumi.Input<string>;
            servicePort: pulumi.Input<number>;
        }

        export interface RolloutSpecStrategyCanaryTrafficRoutingIstio {
            virtualService: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryTrafficRoutingIstioVirtualService>;
        }

        export interface RolloutSpecStrategyCanaryTrafficRoutingIstioVirtualService {
            name: pulumi.Input<string>;
            routes: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecStrategyCanaryTrafficRoutingNginx {
            additionalIngressAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            annotationPrefix?: pulumi.Input<string>;
            stableIngress: pulumi.Input<string>;
        }

        export interface RolloutSpecStrategyCanaryTrafficRoutingSmi {
            rootService?: pulumi.Input<string>;
            trafficSplitName?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplate {
            metadata?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateMetadata>;
            spec?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpec>;
        }

        export interface RolloutSpecTemplateMetadata {
            annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RolloutSpecTemplateSpec {
            activeDeadlineSeconds?: pulumi.Input<number>;
            affinity?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinity>;
            automountServiceAccountToken?: pulumi.Input<boolean>;
            containers: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainers>[]>;
            dnsConfig?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecDnsConfig>;
            dnsPolicy?: pulumi.Input<string>;
            enableServiceLinks?: pulumi.Input<boolean>;
            ephemeralContainers?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainers>[]>;
            hostAliases?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecHostAliases>[]>;
            hostIPC?: pulumi.Input<boolean>;
            hostNetwork?: pulumi.Input<boolean>;
            hostPID?: pulumi.Input<boolean>;
            hostname?: pulumi.Input<string>;
            imagePullSecrets?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecImagePullSecrets>[]>;
            initContainers?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainers>[]>;
            nodeName?: pulumi.Input<string>;
            nodeSelector?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            overhead?: pulumi.Input<{[key: string]: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecOverhead>}>;
            preemptionPolicy?: pulumi.Input<string>;
            priority?: pulumi.Input<number>;
            priorityClassName?: pulumi.Input<string>;
            readinessGates?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecReadinessGates>[]>;
            restartPolicy?: pulumi.Input<string>;
            runtimeClassName?: pulumi.Input<string>;
            schedulerName?: pulumi.Input<string>;
            securityContext?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecSecurityContext>;
            serviceAccount?: pulumi.Input<string>;
            serviceAccountName?: pulumi.Input<string>;
            shareProcessNamespace?: pulumi.Input<boolean>;
            subdomain?: pulumi.Input<string>;
            terminationGracePeriodSeconds?: pulumi.Input<number>;
            tolerations?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecTolerations>[]>;
            topologySpreadConstraints?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecTopologySpreadConstraints>[]>;
            volumes?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumes>[]>;
        }

        export interface RolloutSpecTemplateSpecAffinity {
            nodeAffinity?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityNodeAffinity>;
            podAffinity?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodAffinity>;
            podAntiAffinity?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodAntiAffinity>;
        }

        export interface RolloutSpecTemplateSpecAffinityNodeAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution>;
        }

        export interface RolloutSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            preference: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference>;
            weight: pulumi.Input<number>;
        }

        export interface RolloutSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields>[]>;
        }

        export interface RolloutSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            nodeSelectorTerms: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms>[]>;
        }

        export interface RolloutSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions>[]>;
            matchFields?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields>[]>;
        }

        export interface RolloutSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution>[]>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm>;
            weight: pulumi.Input<number>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodAntiAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution>[]>;
            requiredDuringSchedulingIgnoredDuringExecution?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution>[]>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm>;
            weight: pulumi.Input<number>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector>;
            namespaces?: pulumi.Input<pulumi.Input<string>[]>;
            topologyKey: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RolloutSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecContainers {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersEnv>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersEnvFrom>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecycle>;
            livenessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLivenessProbe>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersPorts>[]>;
            readinessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersReadinessProbe>;
            resources?: pulumi.Input<{[key: string]: any}>;
            securityContext?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersSecurityContext>;
            startupProbe?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersStartupProbe>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersVolumeDevices>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersVolumeMounts>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersEnv {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersEnvValueFrom>;
        }

        export interface RolloutSpecTemplateSpecContainersEnvFrom {
            configMapRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersEnvFromConfigMapRef>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersEnvFromSecretRef>;
        }

        export interface RolloutSpecTemplateSpecContainersEnvFromConfigMapRef {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface RolloutSpecTemplateSpecContainersEnvFromSecretRef {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface RolloutSpecTemplateSpecContainersEnvValueFrom {
            configMapKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersEnvValueFromConfigMapKeyRef>;
            fieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersEnvValueFromFieldRef>;
            resourceFieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersEnvValueFromResourceFieldRef>;
            secretKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersEnvValueFromSecretKeyRef>;
        }

        export interface RolloutSpecTemplateSpecContainersEnvValueFromConfigMapKeyRef {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface RolloutSpecTemplateSpecContainersEnvValueFromFieldRef {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersEnvValueFromResourceFieldRef {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersEnvValueFromResourceFieldRefDivisor>;
            resource: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersEnvValueFromResourceFieldRefDivisor {
        }

        export interface RolloutSpecTemplateSpecContainersEnvValueFromSecretKeyRef {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface RolloutSpecTemplateSpecContainersLifecycle {
            postStart?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePostStart>;
            preStop?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePreStop>;
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePostStart {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePostStartExec>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePostStartHttpGet>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePostStartTcpSocket>;
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePostStartExec {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePostStartHttpGet {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePostStartHttpGetHttpHeaders>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePostStartHttpGetPort>;
            scheme?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePostStartHttpGetHttpHeaders {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePostStartHttpGetPort {
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePostStartTcpSocket {
            host?: pulumi.Input<string>;
            port: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePostStartTcpSocketPort>;
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePostStartTcpSocketPort {
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePreStop {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePreStopExec>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePreStopHttpGet>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePreStopTcpSocket>;
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePreStopExec {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePreStopHttpGet {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePreStopHttpGetHttpHeaders>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePreStopHttpGetPort>;
            scheme?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePreStopHttpGetHttpHeaders {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePreStopHttpGetPort {
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePreStopTcpSocket {
            host?: pulumi.Input<string>;
            port: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePreStopTcpSocketPort>;
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePreStopTcpSocketPort {
        }

        export interface RolloutSpecTemplateSpecContainersLivenessProbe {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLivenessProbeExec>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLivenessProbeHttpGet>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLivenessProbeTcpSocket>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface RolloutSpecTemplateSpecContainersLivenessProbeExec {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecContainersLivenessProbeHttpGet {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLivenessProbeHttpGetHttpHeaders>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLivenessProbeHttpGetPort>;
            scheme?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersLivenessProbeHttpGetHttpHeaders {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersLivenessProbeHttpGetPort {
        }

        export interface RolloutSpecTemplateSpecContainersLivenessProbeTcpSocket {
            host?: pulumi.Input<string>;
            port: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLivenessProbeTcpSocketPort>;
        }

        export interface RolloutSpecTemplateSpecContainersLivenessProbeTcpSocketPort {
        }

        export interface RolloutSpecTemplateSpecContainersPorts {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersReadinessProbe {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersReadinessProbeExec>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersReadinessProbeHttpGet>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersReadinessProbeTcpSocket>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface RolloutSpecTemplateSpecContainersReadinessProbeExec {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecContainersReadinessProbeHttpGet {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersReadinessProbeHttpGetHttpHeaders>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersReadinessProbeHttpGetPort>;
            scheme?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersReadinessProbeHttpGetHttpHeaders {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersReadinessProbeHttpGetPort {
        }

        export interface RolloutSpecTemplateSpecContainersReadinessProbeTcpSocket {
            host?: pulumi.Input<string>;
            port: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersReadinessProbeTcpSocketPort>;
        }

        export interface RolloutSpecTemplateSpecContainersReadinessProbeTcpSocketPort {
        }

        export interface RolloutSpecTemplateSpecContainersSecurityContext {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersSecurityContextCapabilities>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersSecurityContextSeLinuxOptions>;
            windowsOptions?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersSecurityContextWindowsOptions>;
        }

        export interface RolloutSpecTemplateSpecContainersSecurityContextCapabilities {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecContainersSecurityContextSeLinuxOptions {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersSecurityContextWindowsOptions {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersStartupProbe {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersStartupProbeExec>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersStartupProbeHttpGet>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersStartupProbeTcpSocket>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface RolloutSpecTemplateSpecContainersStartupProbeExec {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecContainersStartupProbeHttpGet {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersStartupProbeHttpGetHttpHeaders>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersStartupProbeHttpGetPort>;
            scheme?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersStartupProbeHttpGetHttpHeaders {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersStartupProbeHttpGetPort {
        }

        export interface RolloutSpecTemplateSpecContainersStartupProbeTcpSocket {
            host?: pulumi.Input<string>;
            port: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersStartupProbeTcpSocketPort>;
        }

        export interface RolloutSpecTemplateSpecContainersStartupProbeTcpSocketPort {
        }

        export interface RolloutSpecTemplateSpecContainersVolumeDevices {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecContainersVolumeMounts {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecDnsConfig {
            nameservers?: pulumi.Input<pulumi.Input<string>[]>;
            options?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecDnsConfigOptions>[]>;
            searches?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecDnsConfigOptions {
            name?: pulumi.Input<string>;
            value?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainers {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersEnv>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersEnvFrom>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLifecycle>;
            livenessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLivenessProbe>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersPorts>[]>;
            readinessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersReadinessProbe>;
            resources?: pulumi.Input<{[key: string]: any}>;
            securityContext?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersSecurityContext>;
            startupProbe?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersStartupProbe>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            targetContainerName?: pulumi.Input<string>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersVolumeDevices>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersVolumeMounts>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersEnv {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersEnvValueFrom>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersEnvFrom {
            configMapRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersEnvFromConfigMapRef>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersEnvFromSecretRef>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersEnvFromConfigMapRef {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersEnvFromSecretRef {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersEnvValueFrom {
            configMapKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersEnvValueFromConfigMapKeyRef>;
            fieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersEnvValueFromFieldRef>;
            resourceFieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersEnvValueFromResourceFieldRef>;
            secretKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersEnvValueFromSecretKeyRef>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersEnvValueFromConfigMapKeyRef {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersEnvValueFromFieldRef {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersEnvValueFromResourceFieldRef {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersEnvValueFromResourceFieldRefDivisor>;
            resource: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersEnvValueFromResourceFieldRefDivisor {
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersEnvValueFromSecretKeyRef {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLifecycle {
            postStart?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLifecyclePostStart>;
            preStop?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLifecyclePreStop>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLifecyclePostStart {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLifecyclePostStartExec>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLifecyclePostStartHttpGet>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLifecyclePostStartTcpSocket>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLifecyclePostStartExec {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLifecyclePostStartHttpGet {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLifecyclePostStartHttpGetHttpHeaders>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLifecyclePostStartHttpGetPort>;
            scheme?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLifecyclePostStartHttpGetHttpHeaders {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLifecyclePostStartHttpGetPort {
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLifecyclePostStartTcpSocket {
            host?: pulumi.Input<string>;
            port: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLifecyclePostStartTcpSocketPort>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLifecyclePostStartTcpSocketPort {
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLifecyclePreStop {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLifecyclePreStopExec>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLifecyclePreStopHttpGet>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLifecyclePreStopTcpSocket>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLifecyclePreStopExec {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLifecyclePreStopHttpGet {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLifecyclePreStopHttpGetHttpHeaders>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLifecyclePreStopHttpGetPort>;
            scheme?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLifecyclePreStopHttpGetHttpHeaders {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLifecyclePreStopHttpGetPort {
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLifecyclePreStopTcpSocket {
            host?: pulumi.Input<string>;
            port: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLifecyclePreStopTcpSocketPort>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLifecyclePreStopTcpSocketPort {
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLivenessProbe {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLivenessProbeExec>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLivenessProbeHttpGet>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLivenessProbeTcpSocket>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLivenessProbeExec {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLivenessProbeHttpGet {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLivenessProbeHttpGetHttpHeaders>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLivenessProbeHttpGetPort>;
            scheme?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLivenessProbeHttpGetHttpHeaders {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLivenessProbeHttpGetPort {
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLivenessProbeTcpSocket {
            host?: pulumi.Input<string>;
            port: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLivenessProbeTcpSocketPort>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLivenessProbeTcpSocketPort {
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersPorts {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersReadinessProbe {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersReadinessProbeExec>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersReadinessProbeHttpGet>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersReadinessProbeTcpSocket>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersReadinessProbeExec {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersReadinessProbeHttpGet {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersReadinessProbeHttpGetHttpHeaders>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersReadinessProbeHttpGetPort>;
            scheme?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersReadinessProbeHttpGetHttpHeaders {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersReadinessProbeHttpGetPort {
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersReadinessProbeTcpSocket {
            host?: pulumi.Input<string>;
            port: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersReadinessProbeTcpSocketPort>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersReadinessProbeTcpSocketPort {
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersSecurityContext {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersSecurityContextCapabilities>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersSecurityContextSeLinuxOptions>;
            windowsOptions?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersSecurityContextWindowsOptions>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersSecurityContextCapabilities {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersSecurityContextSeLinuxOptions {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersSecurityContextWindowsOptions {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersStartupProbe {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersStartupProbeExec>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersStartupProbeHttpGet>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersStartupProbeTcpSocket>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersStartupProbeExec {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersStartupProbeHttpGet {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersStartupProbeHttpGetHttpHeaders>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersStartupProbeHttpGetPort>;
            scheme?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersStartupProbeHttpGetHttpHeaders {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersStartupProbeHttpGetPort {
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersStartupProbeTcpSocket {
            host?: pulumi.Input<string>;
            port: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersStartupProbeTcpSocketPort>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersStartupProbeTcpSocketPort {
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersVolumeDevices {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersVolumeMounts {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecHostAliases {
            hostnames?: pulumi.Input<pulumi.Input<string>[]>;
            ip?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecImagePullSecrets {
            name?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitContainers {
            args?: pulumi.Input<pulumi.Input<string>[]>;
            command?: pulumi.Input<pulumi.Input<string>[]>;
            env?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersEnv>[]>;
            envFrom?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersEnvFrom>[]>;
            image?: pulumi.Input<string>;
            imagePullPolicy?: pulumi.Input<string>;
            lifecycle?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLifecycle>;
            livenessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLivenessProbe>;
            name: pulumi.Input<string>;
            ports?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersPorts>[]>;
            readinessProbe?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersReadinessProbe>;
            resources?: pulumi.Input<{[key: string]: any}>;
            securityContext?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersSecurityContext>;
            startupProbe?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersStartupProbe>;
            stdin?: pulumi.Input<boolean>;
            stdinOnce?: pulumi.Input<boolean>;
            terminationMessagePath?: pulumi.Input<string>;
            terminationMessagePolicy?: pulumi.Input<string>;
            tty?: pulumi.Input<boolean>;
            volumeDevices?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersVolumeDevices>[]>;
            volumeMounts?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersVolumeMounts>[]>;
            workingDir?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitContainersEnv {
            name: pulumi.Input<string>;
            value?: pulumi.Input<string>;
            valueFrom?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersEnvValueFrom>;
        }

        export interface RolloutSpecTemplateSpecInitContainersEnvFrom {
            configMapRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersEnvFromConfigMapRef>;
            prefix?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersEnvFromSecretRef>;
        }

        export interface RolloutSpecTemplateSpecInitContainersEnvFromConfigMapRef {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface RolloutSpecTemplateSpecInitContainersEnvFromSecretRef {
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface RolloutSpecTemplateSpecInitContainersEnvValueFrom {
            configMapKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersEnvValueFromConfigMapKeyRef>;
            fieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersEnvValueFromFieldRef>;
            resourceFieldRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersEnvValueFromResourceFieldRef>;
            secretKeyRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersEnvValueFromSecretKeyRef>;
        }

        export interface RolloutSpecTemplateSpecInitContainersEnvValueFromConfigMapKeyRef {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface RolloutSpecTemplateSpecInitContainersEnvValueFromFieldRef {
            apiVersion?: pulumi.Input<string>;
            fieldPath: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitContainersEnvValueFromResourceFieldRef {
            containerName?: pulumi.Input<string>;
            divisor?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersEnvValueFromResourceFieldRefDivisor>;
            resource: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitContainersEnvValueFromResourceFieldRefDivisor {
        }

        export interface RolloutSpecTemplateSpecInitContainersEnvValueFromSecretKeyRef {
            key: pulumi.Input<string>;
            name?: pulumi.Input<string>;
            optional?: pulumi.Input<boolean>;
        }

        export interface RolloutSpecTemplateSpecInitContainersLifecycle {
            postStart?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLifecyclePostStart>;
            preStop?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLifecyclePreStop>;
        }

        export interface RolloutSpecTemplateSpecInitContainersLifecyclePostStart {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLifecyclePostStartExec>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLifecyclePostStartHttpGet>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLifecyclePostStartTcpSocket>;
        }

        export interface RolloutSpecTemplateSpecInitContainersLifecyclePostStartExec {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecInitContainersLifecyclePostStartHttpGet {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLifecyclePostStartHttpGetHttpHeaders>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLifecyclePostStartHttpGetPort>;
            scheme?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitContainersLifecyclePostStartHttpGetHttpHeaders {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitContainersLifecyclePostStartHttpGetPort {
        }

        export interface RolloutSpecTemplateSpecInitContainersLifecyclePostStartTcpSocket {
            host?: pulumi.Input<string>;
            port: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPort>;
        }

        export interface RolloutSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPort {
        }

        export interface RolloutSpecTemplateSpecInitContainersLifecyclePreStop {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLifecyclePreStopExec>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLifecyclePreStopHttpGet>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLifecyclePreStopTcpSocket>;
        }

        export interface RolloutSpecTemplateSpecInitContainersLifecyclePreStopExec {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecInitContainersLifecyclePreStopHttpGet {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeaders>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPort>;
            scheme?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeaders {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPort {
        }

        export interface RolloutSpecTemplateSpecInitContainersLifecyclePreStopTcpSocket {
            host?: pulumi.Input<string>;
            port: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPort>;
        }

        export interface RolloutSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPort {
        }

        export interface RolloutSpecTemplateSpecInitContainersLivenessProbe {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLivenessProbeExec>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLivenessProbeHttpGet>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLivenessProbeTcpSocket>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface RolloutSpecTemplateSpecInitContainersLivenessProbeExec {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecInitContainersLivenessProbeHttpGet {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeaders>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLivenessProbeHttpGetPort>;
            scheme?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeaders {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitContainersLivenessProbeHttpGetPort {
        }

        export interface RolloutSpecTemplateSpecInitContainersLivenessProbeTcpSocket {
            host?: pulumi.Input<string>;
            port: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLivenessProbeTcpSocketPort>;
        }

        export interface RolloutSpecTemplateSpecInitContainersLivenessProbeTcpSocketPort {
        }

        export interface RolloutSpecTemplateSpecInitContainersPorts {
            containerPort: pulumi.Input<number>;
            hostIP?: pulumi.Input<string>;
            hostPort?: pulumi.Input<number>;
            name?: pulumi.Input<string>;
            protocol?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitContainersReadinessProbe {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersReadinessProbeExec>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersReadinessProbeHttpGet>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersReadinessProbeTcpSocket>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface RolloutSpecTemplateSpecInitContainersReadinessProbeExec {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecInitContainersReadinessProbeHttpGet {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeaders>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersReadinessProbeHttpGetPort>;
            scheme?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeaders {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitContainersReadinessProbeHttpGetPort {
        }

        export interface RolloutSpecTemplateSpecInitContainersReadinessProbeTcpSocket {
            host?: pulumi.Input<string>;
            port: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersReadinessProbeTcpSocketPort>;
        }

        export interface RolloutSpecTemplateSpecInitContainersReadinessProbeTcpSocketPort {
        }

        export interface RolloutSpecTemplateSpecInitContainersSecurityContext {
            allowPrivilegeEscalation?: pulumi.Input<boolean>;
            capabilities?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersSecurityContextCapabilities>;
            privileged?: pulumi.Input<boolean>;
            procMount?: pulumi.Input<string>;
            readOnlyRootFilesystem?: pulumi.Input<boolean>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersSecurityContextSeLinuxOptions>;
            windowsOptions?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersSecurityContextWindowsOptions>;
        }

        export interface RolloutSpecTemplateSpecInitContainersSecurityContextCapabilities {
            add?: pulumi.Input<pulumi.Input<string>[]>;
            drop?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecInitContainersSecurityContextSeLinuxOptions {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitContainersSecurityContextWindowsOptions {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitContainersStartupProbe {
            exec?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersStartupProbeExec>;
            failureThreshold?: pulumi.Input<number>;
            httpGet?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersStartupProbeHttpGet>;
            initialDelaySeconds?: pulumi.Input<number>;
            periodSeconds?: pulumi.Input<number>;
            successThreshold?: pulumi.Input<number>;
            tcpSocket?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersStartupProbeTcpSocket>;
            timeoutSeconds?: pulumi.Input<number>;
        }

        export interface RolloutSpecTemplateSpecInitContainersStartupProbeExec {
            command?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecInitContainersStartupProbeHttpGet {
            host?: pulumi.Input<string>;
            httpHeaders?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeaders>[]>;
            path?: pulumi.Input<string>;
            port: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersStartupProbeHttpGetPort>;
            scheme?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeaders {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitContainersStartupProbeHttpGetPort {
        }

        export interface RolloutSpecTemplateSpecInitContainersStartupProbeTcpSocket {
            host?: pulumi.Input<string>;
            port: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersStartupProbeTcpSocketPort>;
        }

        export interface RolloutSpecTemplateSpecInitContainersStartupProbeTcpSocketPort {
        }

        export interface RolloutSpecTemplateSpecInitContainersVolumeDevices {
            devicePath: pulumi.Input<string>;
            name: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecInitContainersVolumeMounts {
            mountPath: pulumi.Input<string>;
            mountPropagation?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            subPath?: pulumi.Input<string>;
            subPathExpr?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecOverhead {
        }

        export interface RolloutSpecTemplateSpecReadinessGates {
            conditionType: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecSecurityContext {
            fsGroup?: pulumi.Input<number>;
            fsGroupChangePolicy?: pulumi.Input<string>;
            runAsGroup?: pulumi.Input<number>;
            runAsNonRoot?: pulumi.Input<boolean>;
            runAsUser?: pulumi.Input<number>;
            seLinuxOptions?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecSecurityContextSeLinuxOptions>;
            supplementalGroups?: pulumi.Input<pulumi.Input<number>[]>;
            sysctls?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecSecurityContextSysctls>[]>;
            windowsOptions?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecSecurityContextWindowsOptions>;
        }

        export interface RolloutSpecTemplateSpecSecurityContextSeLinuxOptions {
            level?: pulumi.Input<string>;
            role?: pulumi.Input<string>;
            type?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecSecurityContextSysctls {
            name: pulumi.Input<string>;
            value: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecSecurityContextWindowsOptions {
            gmsaCredentialSpec?: pulumi.Input<string>;
            gmsaCredentialSpecName?: pulumi.Input<string>;
            runAsUserName?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecTolerations {
            effect?: pulumi.Input<string>;
            key?: pulumi.Input<string>;
            operator?: pulumi.Input<string>;
            tolerationSeconds?: pulumi.Input<number>;
            value?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecTopologySpreadConstraints {
            labelSelector?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecTopologySpreadConstraintsLabelSelector>;
            maxSkew: pulumi.Input<number>;
            topologyKey: pulumi.Input<string>;
            whenUnsatisfiable: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecTopologySpreadConstraintsLabelSelector {
            matchExpressions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressions>[]>;
            matchLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RolloutSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressions {
            key: pulumi.Input<string>;
            operator: pulumi.Input<string>;
            values?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecVolumes {
            awsElasticBlockStore?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesAwsElasticBlockStore>;
            azureDisk?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesAzureDisk>;
            azureFile?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesAzureFile>;
            cephfs?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesCephfs>;
            cinder?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesCinder>;
            csi?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesCsi>;
            emptyDir?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesEmptyDir>;
            fc?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesFc>;
            flexVolume?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesFlexVolume>;
            flocker?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesFlocker>;
            gcePersistentDisk?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesGcePersistentDisk>;
            gitRepo?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesGitRepo>;
            glusterfs?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesGlusterfs>;
            hostPath?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesHostPath>;
            iscsi?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesIscsi>;
            name: pulumi.Input<string>;
            nfs?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesNfs>;
            persistentVolumeClaim?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesPersistentVolumeClaim>;
            photonPersistentDisk?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesPhotonPersistentDisk>;
            portworxVolume?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesPortworxVolume>;
            projected?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesProjected>;
            quobyte?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesQuobyte>;
            rbd?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesRbd>;
            scaleIO?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesScaleIO>;
            storageos?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesStorageos>;
            vsphereVolume?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesVsphereVolume>;
        }

        export interface RolloutSpecTemplateSpecVolumesAwsElasticBlockStore {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecVolumesAzureDisk {
            cachingMode?: pulumi.Input<string>;
            diskName: pulumi.Input<string>;
            diskURI: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            kind?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface RolloutSpecTemplateSpecVolumesAzureFile {
            readOnly?: pulumi.Input<boolean>;
            secretName: pulumi.Input<string>;
            shareName: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecVolumesCephfs {
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            path?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretFile?: pulumi.Input<string>;
            secretRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesCephfsSecretRef>;
            user?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecVolumesCephfsSecretRef {
            name?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecVolumesCinder {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesCinderSecretRef>;
            volumeID: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecVolumesCinderSecretRef {
            name?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecVolumesCsi {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            nodePublishSecretRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesCsiNodePublishSecretRef>;
            readOnly?: pulumi.Input<boolean>;
            volumeAttributes?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        }

        export interface RolloutSpecTemplateSpecVolumesCsiNodePublishSecretRef {
            name?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecVolumesEmptyDir {
            medium?: pulumi.Input<string>;
            sizeLimit?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesEmptyDirSizeLimit>;
        }

        export interface RolloutSpecTemplateSpecVolumesEmptyDirSizeLimit {
        }

        export interface RolloutSpecTemplateSpecVolumesFc {
            fsType?: pulumi.Input<string>;
            lun?: pulumi.Input<number>;
            readOnly?: pulumi.Input<boolean>;
            targetWWNs?: pulumi.Input<pulumi.Input<string>[]>;
            wwids?: pulumi.Input<pulumi.Input<string>[]>;
        }

        export interface RolloutSpecTemplateSpecVolumesFlexVolume {
            driver: pulumi.Input<string>;
            fsType?: pulumi.Input<string>;
            options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesFlexVolumeSecretRef>;
        }

        export interface RolloutSpecTemplateSpecVolumesFlexVolumeSecretRef {
            name?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecVolumesFlocker {
            datasetName?: pulumi.Input<string>;
            datasetUUID?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecVolumesGcePersistentDisk {
            fsType?: pulumi.Input<string>;
            partition?: pulumi.Input<number>;
            pdName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface RolloutSpecTemplateSpecVolumesGitRepo {
            directory?: pulumi.Input<string>;
            repository: pulumi.Input<string>;
            revision?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecVolumesGlusterfs {
            endpoints: pulumi.Input<string>;
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface RolloutSpecTemplateSpecVolumesHostPath {
            path: pulumi.Input<string>;
            type?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecVolumesIscsi {
            chapAuthDiscovery?: pulumi.Input<boolean>;
            chapAuthSession?: pulumi.Input<boolean>;
            fsType?: pulumi.Input<string>;
            initiatorName?: pulumi.Input<string>;
            iqn: pulumi.Input<string>;
            iscsiInterface?: pulumi.Input<string>;
            lun: pulumi.Input<number>;
            portals?: pulumi.Input<pulumi.Input<string>[]>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesIscsiSecretRef>;
            targetPortal: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecVolumesIscsiSecretRef {
            name?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecVolumesNfs {
            path: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            server: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecVolumesPersistentVolumeClaim {
            claimName: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
        }

        export interface RolloutSpecTemplateSpecVolumesPhotonPersistentDisk {
            fsType?: pulumi.Input<string>;
            pdID: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecVolumesPortworxVolume {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            volumeID: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecVolumesProjected {
            defaultMode?: pulumi.Input<number>;
            sources: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesProjectedSources>[]>;
        }

        export interface RolloutSpecTemplateSpecVolumesProjectedSources {
            serviceAccountToken?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken>;
        }

        export interface RolloutSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken {
            audience?: pulumi.Input<string>;
            expirationSeconds?: pulumi.Input<number>;
            path: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecVolumesQuobyte {
            group?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            registry: pulumi.Input<string>;
            tenant?: pulumi.Input<string>;
            user?: pulumi.Input<string>;
            volume: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecVolumesRbd {
            fsType?: pulumi.Input<string>;
            image: pulumi.Input<string>;
            keyring?: pulumi.Input<string>;
            monitors: pulumi.Input<pulumi.Input<string>[]>;
            pool?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesRbdSecretRef>;
            user?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecVolumesRbdSecretRef {
            name?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecVolumesScaleIO {
            fsType?: pulumi.Input<string>;
            gateway: pulumi.Input<string>;
            protectionDomain?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesScaleIOSecretRef>;
            sslEnabled?: pulumi.Input<boolean>;
            storageMode?: pulumi.Input<string>;
            storagePool?: pulumi.Input<string>;
            system: pulumi.Input<string>;
            volumeName?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecVolumesScaleIOSecretRef {
            name?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecVolumesStorageos {
            fsType?: pulumi.Input<string>;
            readOnly?: pulumi.Input<boolean>;
            secretRef?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesStorageosSecretRef>;
            volumeName?: pulumi.Input<string>;
            volumeNamespace?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecVolumesStorageosSecretRef {
            name?: pulumi.Input<string>;
        }

        export interface RolloutSpecTemplateSpecVolumesVsphereVolume {
            fsType?: pulumi.Input<string>;
            storagePolicyID?: pulumi.Input<string>;
            storagePolicyName?: pulumi.Input<string>;
            volumePath: pulumi.Input<string>;
        }

        export interface RolloutStatus {
            HPAReplicas?: pulumi.Input<number>;
            abort?: pulumi.Input<boolean>;
            abortedAt?: pulumi.Input<string>;
            availableReplicas?: pulumi.Input<number>;
            blueGreen?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutStatusBlueGreen>;
            canary?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutStatusCanary>;
            collisionCount?: pulumi.Input<number>;
            conditions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutStatusConditions>[]>;
            controllerPause?: pulumi.Input<boolean>;
            currentPodHash?: pulumi.Input<string>;
            currentStepHash?: pulumi.Input<string>;
            currentStepIndex?: pulumi.Input<number>;
            observedGeneration?: pulumi.Input<string>;
            pauseConditions?: pulumi.Input<pulumi.Input<inputs.argoproj.v1alpha1.RolloutStatusPauseConditions>[]>;
            promoteFull?: pulumi.Input<boolean>;
            readyReplicas?: pulumi.Input<number>;
            replicas?: pulumi.Input<number>;
            restartedAt?: pulumi.Input<string>;
            selector?: pulumi.Input<string>;
            stableRS?: pulumi.Input<string>;
            updatedReplicas?: pulumi.Input<number>;
        }

        export interface RolloutStatusBlueGreen {
            activeSelector?: pulumi.Input<string>;
            postPromotionAnalysisRun?: pulumi.Input<string>;
            postPromotionAnalysisRunStatus?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutStatusBlueGreenPostPromotionAnalysisRunStatus>;
            prePromotionAnalysisRun?: pulumi.Input<string>;
            prePromotionAnalysisRunStatus?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutStatusBlueGreenPrePromotionAnalysisRunStatus>;
            previewSelector?: pulumi.Input<string>;
            previousActiveSelector?: pulumi.Input<string>;
            scaleDownDelayStartTime?: pulumi.Input<string>;
            scaleUpPreviewCheckPoint?: pulumi.Input<boolean>;
        }

        export interface RolloutStatusBlueGreenPostPromotionAnalysisRunStatus {
            message?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            status: pulumi.Input<string>;
        }

        export interface RolloutStatusBlueGreenPrePromotionAnalysisRunStatus {
            message?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            status: pulumi.Input<string>;
        }

        export interface RolloutStatusCanary {
            currentBackgroundAnalysisRun?: pulumi.Input<string>;
            currentBackgroundAnalysisRunStatus?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutStatusCanaryCurrentBackgroundAnalysisRunStatus>;
            currentExperiment?: pulumi.Input<string>;
            currentStepAnalysisRun?: pulumi.Input<string>;
            currentStepAnalysisRunStatus?: pulumi.Input<inputs.argoproj.v1alpha1.RolloutStatusCanaryCurrentStepAnalysisRunStatus>;
        }

        export interface RolloutStatusCanaryCurrentBackgroundAnalysisRunStatus {
            message?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            status: pulumi.Input<string>;
        }

        export interface RolloutStatusCanaryCurrentStepAnalysisRunStatus {
            message?: pulumi.Input<string>;
            name: pulumi.Input<string>;
            status: pulumi.Input<string>;
        }

        export interface RolloutStatusConditions {
            lastTransitionTime: pulumi.Input<string>;
            lastUpdateTime: pulumi.Input<string>;
            message: pulumi.Input<string>;
            reason: pulumi.Input<string>;
            status: pulumi.Input<string>;
            type: pulumi.Input<string>;
        }

        export interface RolloutStatusPauseConditions {
            reason: pulumi.Input<string>;
            startTime: pulumi.Input<string>;
        }
    }
}

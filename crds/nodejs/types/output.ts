// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

import {ObjectMeta} from "../meta/v1";

export namespace argoproj {
    export namespace v1alpha1 {
        export interface RolloutSpec {
            minReadySeconds?: number;
            paused?: boolean;
            progressDeadlineSeconds?: number;
            replicas?: number;
            restartAt?: string;
            revisionHistoryLimit?: number;
            selector: outputs.argoproj.v1alpha1.RolloutSpecSelector;
            strategy?: outputs.argoproj.v1alpha1.RolloutSpecStrategy;
            template: outputs.argoproj.v1alpha1.RolloutSpecTemplate;
        }

        export interface RolloutSpecSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.RolloutSpecSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface RolloutSpecSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface RolloutSpecStrategy {
            blueGreen?: outputs.argoproj.v1alpha1.RolloutSpecStrategyBlueGreen;
            canary?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanary;
        }

        export interface RolloutSpecStrategyBlueGreen {
            activeService: string;
            antiAffinity?: outputs.argoproj.v1alpha1.RolloutSpecStrategyBlueGreenAntiAffinity;
            autoPromotionEnabled?: boolean;
            autoPromotionSeconds?: number;
            postPromotionAnalysis?: outputs.argoproj.v1alpha1.RolloutSpecStrategyBlueGreenPostPromotionAnalysis;
            prePromotionAnalysis?: outputs.argoproj.v1alpha1.RolloutSpecStrategyBlueGreenPrePromotionAnalysis;
            previewReplicaCount?: number;
            previewService?: string;
            scaleDownDelayRevisionLimit?: number;
            scaleDownDelaySeconds?: number;
        }

        export interface RolloutSpecStrategyBlueGreenAntiAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.RolloutSpecStrategyBlueGreenAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution;
            requiredDuringSchedulingIgnoredDuringExecution?: {[key: string]: any};
        }

        export interface RolloutSpecStrategyBlueGreenAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            weight: number;
        }

        export interface RolloutSpecStrategyBlueGreenPostPromotionAnalysis {
            args?: outputs.argoproj.v1alpha1.RolloutSpecStrategyBlueGreenPostPromotionAnalysisArgs[];
            clusterScope?: boolean;
            templateName?: string;
            templates?: outputs.argoproj.v1alpha1.RolloutSpecStrategyBlueGreenPostPromotionAnalysisTemplates[];
        }

        export interface RolloutSpecStrategyBlueGreenPostPromotionAnalysisArgs {
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.RolloutSpecStrategyBlueGreenPostPromotionAnalysisArgsValueFrom;
        }

        export interface RolloutSpecStrategyBlueGreenPostPromotionAnalysisArgsValueFrom {
            fieldRef?: outputs.argoproj.v1alpha1.RolloutSpecStrategyBlueGreenPostPromotionAnalysisArgsValueFromFieldRef;
            podTemplateHashValue?: string;
        }

        export interface RolloutSpecStrategyBlueGreenPostPromotionAnalysisArgsValueFromFieldRef {
            fieldPath: string;
        }

        export interface RolloutSpecStrategyBlueGreenPostPromotionAnalysisTemplates {
            clusterScope?: boolean;
            templateName?: string;
        }

        export interface RolloutSpecStrategyBlueGreenPrePromotionAnalysis {
            args?: outputs.argoproj.v1alpha1.RolloutSpecStrategyBlueGreenPrePromotionAnalysisArgs[];
            clusterScope?: boolean;
            templateName?: string;
            templates?: outputs.argoproj.v1alpha1.RolloutSpecStrategyBlueGreenPrePromotionAnalysisTemplates[];
        }

        export interface RolloutSpecStrategyBlueGreenPrePromotionAnalysisArgs {
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.RolloutSpecStrategyBlueGreenPrePromotionAnalysisArgsValueFrom;
        }

        export interface RolloutSpecStrategyBlueGreenPrePromotionAnalysisArgsValueFrom {
            fieldRef?: outputs.argoproj.v1alpha1.RolloutSpecStrategyBlueGreenPrePromotionAnalysisArgsValueFromFieldRef;
            podTemplateHashValue?: string;
        }

        export interface RolloutSpecStrategyBlueGreenPrePromotionAnalysisArgsValueFromFieldRef {
            fieldPath: string;
        }

        export interface RolloutSpecStrategyBlueGreenPrePromotionAnalysisTemplates {
            clusterScope?: boolean;
            templateName?: string;
        }

        export interface RolloutSpecStrategyCanary {
            analysis?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryAnalysis;
            antiAffinity?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryAntiAffinity;
            canaryMetadata?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryCanaryMetadata;
            canaryService?: string;
            maxSurge?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryMaxSurge;
            maxUnavailable?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryMaxUnavailable;
            stableMetadata?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStableMetadata;
            stableService?: string;
            steps?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanarySteps[];
            trafficRouting?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryTrafficRouting;
        }

        export interface RolloutSpecStrategyCanaryAnalysis {
            args?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryAnalysisArgs[];
            clusterScope?: boolean;
            startingStep?: number;
            templateName?: string;
            templates?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryAnalysisTemplates[];
        }

        export interface RolloutSpecStrategyCanaryAnalysisArgs {
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryAnalysisArgsValueFrom;
        }

        export interface RolloutSpecStrategyCanaryAnalysisArgsValueFrom {
            fieldRef?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryAnalysisArgsValueFromFieldRef;
            podTemplateHashValue?: string;
        }

        export interface RolloutSpecStrategyCanaryAnalysisArgsValueFromFieldRef {
            fieldPath: string;
        }

        export interface RolloutSpecStrategyCanaryAnalysisTemplates {
            clusterScope?: boolean;
            templateName?: string;
        }

        export interface RolloutSpecStrategyCanaryAntiAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution;
            requiredDuringSchedulingIgnoredDuringExecution?: {[key: string]: any};
        }

        export interface RolloutSpecStrategyCanaryAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            weight: number;
        }

        export interface RolloutSpecStrategyCanaryCanaryMetadata {
            annotations?: {[key: string]: string};
            labels?: {[key: string]: string};
        }

        export interface RolloutSpecStrategyCanaryMaxSurge {
        }

        export interface RolloutSpecStrategyCanaryMaxUnavailable {
        }

        export interface RolloutSpecStrategyCanaryStableMetadata {
            annotations?: {[key: string]: string};
            labels?: {[key: string]: string};
        }

        export interface RolloutSpecStrategyCanarySteps {
            analysis?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsAnalysis;
            experiment?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsExperiment;
            pause?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsPause;
            setCanaryScale?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsSetCanaryScale;
            setWeight?: number;
        }

        export interface RolloutSpecStrategyCanaryStepsAnalysis {
            args?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsAnalysisArgs[];
            clusterScope?: boolean;
            templateName?: string;
            templates?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsAnalysisTemplates[];
        }

        export interface RolloutSpecStrategyCanaryStepsAnalysisArgs {
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsAnalysisArgsValueFrom;
        }

        export interface RolloutSpecStrategyCanaryStepsAnalysisArgsValueFrom {
            fieldRef?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsAnalysisArgsValueFromFieldRef;
            podTemplateHashValue?: string;
        }

        export interface RolloutSpecStrategyCanaryStepsAnalysisArgsValueFromFieldRef {
            fieldPath: string;
        }

        export interface RolloutSpecStrategyCanaryStepsAnalysisTemplates {
            clusterScope?: boolean;
            templateName?: string;
        }

        export interface RolloutSpecStrategyCanaryStepsExperiment {
            analyses?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsExperimentAnalyses[];
            duration?: string;
            templates: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsExperimentTemplates[];
        }

        export interface RolloutSpecStrategyCanaryStepsExperimentAnalyses {
            args?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsExperimentAnalysesArgs[];
            clusterScope?: boolean;
            name: string;
            requiredForCompletion?: boolean;
            templateName: string;
        }

        export interface RolloutSpecStrategyCanaryStepsExperimentAnalysesArgs {
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsExperimentAnalysesArgsValueFrom;
        }

        export interface RolloutSpecStrategyCanaryStepsExperimentAnalysesArgsValueFrom {
            fieldRef?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsExperimentAnalysesArgsValueFromFieldRef;
            podTemplateHashValue?: string;
        }

        export interface RolloutSpecStrategyCanaryStepsExperimentAnalysesArgsValueFromFieldRef {
            fieldPath: string;
        }

        export interface RolloutSpecStrategyCanaryStepsExperimentTemplates {
            metadata?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsExperimentTemplatesMetadata;
            name: string;
            replicas?: number;
            selector?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsExperimentTemplatesSelector;
            specRef: string;
        }

        export interface RolloutSpecStrategyCanaryStepsExperimentTemplatesMetadata {
            annotations?: {[key: string]: string};
            labels?: {[key: string]: string};
        }

        export interface RolloutSpecStrategyCanaryStepsExperimentTemplatesSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsExperimentTemplatesSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface RolloutSpecStrategyCanaryStepsExperimentTemplatesSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface RolloutSpecStrategyCanaryStepsPause {
            duration?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryStepsPauseDuration;
        }

        export interface RolloutSpecStrategyCanaryStepsPauseDuration {
        }

        export interface RolloutSpecStrategyCanaryStepsSetCanaryScale {
            matchTrafficWeight?: boolean;
            replicas?: number;
            weight?: number;
        }

        export interface RolloutSpecStrategyCanaryTrafficRouting {
            alb?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryTrafficRoutingAlb;
            istio?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryTrafficRoutingIstio;
            nginx?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryTrafficRoutingNginx;
            smi?: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryTrafficRoutingSmi;
        }

        export interface RolloutSpecStrategyCanaryTrafficRoutingAlb {
            annotationPrefix?: string;
            ingress: string;
            rootService?: string;
            servicePort: number;
        }

        export interface RolloutSpecStrategyCanaryTrafficRoutingIstio {
            virtualService: outputs.argoproj.v1alpha1.RolloutSpecStrategyCanaryTrafficRoutingIstioVirtualService;
        }

        export interface RolloutSpecStrategyCanaryTrafficRoutingIstioVirtualService {
            name: string;
            routes: string[];
        }

        export interface RolloutSpecStrategyCanaryTrafficRoutingNginx {
            additionalIngressAnnotations?: {[key: string]: string};
            annotationPrefix?: string;
            stableIngress: string;
        }

        export interface RolloutSpecStrategyCanaryTrafficRoutingSmi {
            rootService?: string;
            trafficSplitName?: string;
        }

        export interface RolloutSpecTemplate {
            metadata?: outputs.argoproj.v1alpha1.RolloutSpecTemplateMetadata;
            spec?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpec;
        }

        export interface RolloutSpecTemplateMetadata {
            annotations?: {[key: string]: string};
            labels?: {[key: string]: string};
        }

        export interface RolloutSpecTemplateSpec {
            activeDeadlineSeconds?: number;
            affinity?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinity;
            automountServiceAccountToken?: boolean;
            containers: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainers[];
            dnsConfig?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecDnsConfig;
            dnsPolicy?: string;
            enableServiceLinks?: boolean;
            ephemeralContainers?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainers[];
            hostAliases?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecHostAliases[];
            hostIPC?: boolean;
            hostNetwork?: boolean;
            hostPID?: boolean;
            hostname?: string;
            imagePullSecrets?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecImagePullSecrets[];
            initContainers?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainers[];
            nodeName?: string;
            nodeSelector?: {[key: string]: string};
            overhead?: {[key: string]: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecOverhead};
            preemptionPolicy?: string;
            priority?: number;
            priorityClassName?: string;
            readinessGates?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecReadinessGates[];
            restartPolicy?: string;
            runtimeClassName?: string;
            schedulerName?: string;
            securityContext?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecSecurityContext;
            serviceAccount?: string;
            serviceAccountName?: string;
            shareProcessNamespace?: boolean;
            subdomain?: string;
            terminationGracePeriodSeconds?: number;
            tolerations?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecTolerations[];
            topologySpreadConstraints?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecTopologySpreadConstraints[];
            volumes?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumes[];
        }

        export interface RolloutSpecTemplateSpecAffinity {
            nodeAffinity?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityNodeAffinity;
            podAffinity?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodAffinity;
            podAntiAffinity?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodAntiAffinity;
        }

        export interface RolloutSpecTemplateSpecAffinityNodeAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;
        }

        export interface RolloutSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            preference: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;
            weight: number;
        }

        export interface RolloutSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
            matchExpressions?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];
            matchFields?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];
        }

        export interface RolloutSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface RolloutSpecTemplateSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface RolloutSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            nodeSelectorTerms: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];
        }

        export interface RolloutSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
            matchExpressions?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];
            matchFields?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];
        }

        export interface RolloutSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface RolloutSpecTemplateSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface RolloutSpecTemplateSpecAffinityPodAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface RolloutSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface RolloutSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface RolloutSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface RolloutSpecTemplateSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface RolloutSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface RolloutSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface RolloutSpecTemplateSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface RolloutSpecTemplateSpecAffinityPodAntiAffinity {
            preferredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];
            requiredDuringSchedulingIgnoredDuringExecution?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];
        }

        export interface RolloutSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
            podAffinityTerm: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;
            weight: number;
        }

        export interface RolloutSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
            labelSelector?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface RolloutSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface RolloutSpecTemplateSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface RolloutSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
            labelSelector?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;
            namespaces?: string[];
            topologyKey: string;
        }

        export interface RolloutSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface RolloutSpecTemplateSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface RolloutSpecTemplateSpecContainers {
            args?: string[];
            command?: string[];
            env?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersEnv[];
            envFrom?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersEnvFrom[];
            image?: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecycle;
            livenessProbe?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLivenessProbe;
            name: string;
            ports?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersPorts[];
            readinessProbe?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersReadinessProbe;
            resources?: {[key: string]: any};
            securityContext?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersSecurityContext;
            startupProbe?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersVolumeDevices[];
            volumeMounts?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersVolumeMounts[];
            workingDir?: string;
        }

        export interface RolloutSpecTemplateSpecContainersEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersEnvValueFrom;
        }

        export interface RolloutSpecTemplateSpecContainersEnvFrom {
            configMapRef?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersEnvFromSecretRef;
        }

        export interface RolloutSpecTemplateSpecContainersEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface RolloutSpecTemplateSpecContainersEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface RolloutSpecTemplateSpecContainersEnvValueFrom {
            configMapKeyRef?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersEnvValueFromFieldRef;
            resourceFieldRef?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersEnvValueFromSecretKeyRef;
        }

        export interface RolloutSpecTemplateSpecContainersEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface RolloutSpecTemplateSpecContainersEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface RolloutSpecTemplateSpecContainersEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersEnvValueFromResourceFieldRefDivisor;
            resource: string;
        }

        export interface RolloutSpecTemplateSpecContainersEnvValueFromResourceFieldRefDivisor {
        }

        export interface RolloutSpecTemplateSpecContainersEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface RolloutSpecTemplateSpecContainersLifecycle {
            postStart?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePostStart;
            preStop?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePreStop;
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePostStart {
            exec?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePostStartExec;
            httpGet?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePostStartHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePostStartTcpSocket;
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePostStartExec {
            command?: string[];
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePostStartHttpGetPort {
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePostStartTcpSocketPort;
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePostStartTcpSocketPort {
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePreStop {
            exec?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePreStopExec;
            httpGet?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePreStopHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePreStopTcpSocket;
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePreStopExec {
            command?: string[];
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePreStopHttpGetPort {
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLifecyclePreStopTcpSocketPort;
        }

        export interface RolloutSpecTemplateSpecContainersLifecyclePreStopTcpSocketPort {
        }

        export interface RolloutSpecTemplateSpecContainersLivenessProbe {
            exec?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface RolloutSpecTemplateSpecContainersLivenessProbeExec {
            command?: string[];
        }

        export interface RolloutSpecTemplateSpecContainersLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface RolloutSpecTemplateSpecContainersLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface RolloutSpecTemplateSpecContainersLivenessProbeHttpGetPort {
        }

        export interface RolloutSpecTemplateSpecContainersLivenessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersLivenessProbeTcpSocketPort;
        }

        export interface RolloutSpecTemplateSpecContainersLivenessProbeTcpSocketPort {
        }

        export interface RolloutSpecTemplateSpecContainersPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface RolloutSpecTemplateSpecContainersReadinessProbe {
            exec?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface RolloutSpecTemplateSpecContainersReadinessProbeExec {
            command?: string[];
        }

        export interface RolloutSpecTemplateSpecContainersReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface RolloutSpecTemplateSpecContainersReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface RolloutSpecTemplateSpecContainersReadinessProbeHttpGetPort {
        }

        export interface RolloutSpecTemplateSpecContainersReadinessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersReadinessProbeTcpSocketPort;
        }

        export interface RolloutSpecTemplateSpecContainersReadinessProbeTcpSocketPort {
        }

        export interface RolloutSpecTemplateSpecContainersSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersSecurityContextWindowsOptions;
        }

        export interface RolloutSpecTemplateSpecContainersSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface RolloutSpecTemplateSpecContainersSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface RolloutSpecTemplateSpecContainersSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface RolloutSpecTemplateSpecContainersStartupProbe {
            exec?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface RolloutSpecTemplateSpecContainersStartupProbeExec {
            command?: string[];
        }

        export interface RolloutSpecTemplateSpecContainersStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface RolloutSpecTemplateSpecContainersStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface RolloutSpecTemplateSpecContainersStartupProbeHttpGetPort {
        }

        export interface RolloutSpecTemplateSpecContainersStartupProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecContainersStartupProbeTcpSocketPort;
        }

        export interface RolloutSpecTemplateSpecContainersStartupProbeTcpSocketPort {
        }

        export interface RolloutSpecTemplateSpecContainersVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface RolloutSpecTemplateSpecContainersVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface RolloutSpecTemplateSpecDnsConfig {
            nameservers?: string[];
            options?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecDnsConfigOptions[];
            searches?: string[];
        }

        export interface RolloutSpecTemplateSpecDnsConfigOptions {
            name?: string;
            value?: string;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainers {
            args?: string[];
            command?: string[];
            env?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersEnv[];
            envFrom?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersEnvFrom[];
            image?: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLifecycle;
            livenessProbe?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLivenessProbe;
            name: string;
            ports?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersPorts[];
            readinessProbe?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersReadinessProbe;
            resources?: {[key: string]: any};
            securityContext?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersSecurityContext;
            startupProbe?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            targetContainerName?: string;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersVolumeDevices[];
            volumeMounts?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersVolumeMounts[];
            workingDir?: string;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersEnvValueFrom;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersEnvFrom {
            configMapRef?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersEnvFromSecretRef;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersEnvValueFrom {
            configMapKeyRef?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersEnvValueFromFieldRef;
            resourceFieldRef?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersEnvValueFromSecretKeyRef;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersEnvValueFromResourceFieldRefDivisor;
            resource: string;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersEnvValueFromResourceFieldRefDivisor {
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLifecycle {
            postStart?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLifecyclePostStart;
            preStop?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLifecyclePreStop;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLifecyclePostStart {
            exec?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLifecyclePostStartExec;
            httpGet?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLifecyclePostStartHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLifecyclePostStartTcpSocket;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLifecyclePostStartExec {
            command?: string[];
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLifecyclePostStartHttpGetPort {
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLifecyclePostStartTcpSocketPort;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLifecyclePostStartTcpSocketPort {
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLifecyclePreStop {
            exec?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLifecyclePreStopExec;
            httpGet?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLifecyclePreStopHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLifecyclePreStopTcpSocket;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLifecyclePreStopExec {
            command?: string[];
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLifecyclePreStopHttpGetPort {
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLifecyclePreStopTcpSocketPort;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLifecyclePreStopTcpSocketPort {
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLivenessProbe {
            exec?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLivenessProbeExec {
            command?: string[];
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLivenessProbeHttpGetPort {
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLivenessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersLivenessProbeTcpSocketPort;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersLivenessProbeTcpSocketPort {
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersReadinessProbe {
            exec?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersReadinessProbeExec {
            command?: string[];
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersReadinessProbeHttpGetPort {
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersReadinessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersReadinessProbeTcpSocketPort;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersReadinessProbeTcpSocketPort {
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersSecurityContextWindowsOptions;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersStartupProbe {
            exec?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersStartupProbeExec {
            command?: string[];
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersStartupProbeHttpGetPort {
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersStartupProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecEphemeralContainersStartupProbeTcpSocketPort;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersStartupProbeTcpSocketPort {
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface RolloutSpecTemplateSpecEphemeralContainersVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface RolloutSpecTemplateSpecHostAliases {
            hostnames?: string[];
            ip?: string;
        }

        export interface RolloutSpecTemplateSpecImagePullSecrets {
            name?: string;
        }

        export interface RolloutSpecTemplateSpecInitContainers {
            args?: string[];
            command?: string[];
            env?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersEnv[];
            envFrom?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersEnvFrom[];
            image?: string;
            imagePullPolicy?: string;
            lifecycle?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLifecycle;
            livenessProbe?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLivenessProbe;
            name: string;
            ports?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersPorts[];
            readinessProbe?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersReadinessProbe;
            resources?: {[key: string]: any};
            securityContext?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersSecurityContext;
            startupProbe?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersStartupProbe;
            stdin?: boolean;
            stdinOnce?: boolean;
            terminationMessagePath?: string;
            terminationMessagePolicy?: string;
            tty?: boolean;
            volumeDevices?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersVolumeDevices[];
            volumeMounts?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersVolumeMounts[];
            workingDir?: string;
        }

        export interface RolloutSpecTemplateSpecInitContainersEnv {
            name: string;
            value?: string;
            valueFrom?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersEnvValueFrom;
        }

        export interface RolloutSpecTemplateSpecInitContainersEnvFrom {
            configMapRef?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersEnvFromConfigMapRef;
            prefix?: string;
            secretRef?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersEnvFromSecretRef;
        }

        export interface RolloutSpecTemplateSpecInitContainersEnvFromConfigMapRef {
            name?: string;
            optional?: boolean;
        }

        export interface RolloutSpecTemplateSpecInitContainersEnvFromSecretRef {
            name?: string;
            optional?: boolean;
        }

        export interface RolloutSpecTemplateSpecInitContainersEnvValueFrom {
            configMapKeyRef?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersEnvValueFromConfigMapKeyRef;
            fieldRef?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersEnvValueFromFieldRef;
            resourceFieldRef?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersEnvValueFromResourceFieldRef;
            secretKeyRef?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersEnvValueFromSecretKeyRef;
        }

        export interface RolloutSpecTemplateSpecInitContainersEnvValueFromConfigMapKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface RolloutSpecTemplateSpecInitContainersEnvValueFromFieldRef {
            apiVersion?: string;
            fieldPath: string;
        }

        export interface RolloutSpecTemplateSpecInitContainersEnvValueFromResourceFieldRef {
            containerName?: string;
            divisor?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersEnvValueFromResourceFieldRefDivisor;
            resource: string;
        }

        export interface RolloutSpecTemplateSpecInitContainersEnvValueFromResourceFieldRefDivisor {
        }

        export interface RolloutSpecTemplateSpecInitContainersEnvValueFromSecretKeyRef {
            key: string;
            name?: string;
            optional?: boolean;
        }

        export interface RolloutSpecTemplateSpecInitContainersLifecycle {
            postStart?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLifecyclePostStart;
            preStop?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLifecyclePreStop;
        }

        export interface RolloutSpecTemplateSpecInitContainersLifecyclePostStart {
            exec?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLifecyclePostStartExec;
            httpGet?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLifecyclePostStartHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLifecyclePostStartTcpSocket;
        }

        export interface RolloutSpecTemplateSpecInitContainersLifecyclePostStartExec {
            command?: string[];
        }

        export interface RolloutSpecTemplateSpecInitContainersLifecyclePostStartHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLifecyclePostStartHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLifecyclePostStartHttpGetPort;
            scheme?: string;
        }

        export interface RolloutSpecTemplateSpecInitContainersLifecyclePostStartHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface RolloutSpecTemplateSpecInitContainersLifecyclePostStartHttpGetPort {
        }

        export interface RolloutSpecTemplateSpecInitContainersLifecyclePostStartTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPort;
        }

        export interface RolloutSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPort {
        }

        export interface RolloutSpecTemplateSpecInitContainersLifecyclePreStop {
            exec?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLifecyclePreStopExec;
            httpGet?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLifecyclePreStopHttpGet;
            tcpSocket?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLifecyclePreStopTcpSocket;
        }

        export interface RolloutSpecTemplateSpecInitContainersLifecyclePreStopExec {
            command?: string[];
        }

        export interface RolloutSpecTemplateSpecInitContainersLifecyclePreStopHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPort;
            scheme?: string;
        }

        export interface RolloutSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface RolloutSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPort {
        }

        export interface RolloutSpecTemplateSpecInitContainersLifecyclePreStopTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPort;
        }

        export interface RolloutSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPort {
        }

        export interface RolloutSpecTemplateSpecInitContainersLivenessProbe {
            exec?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLivenessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLivenessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLivenessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface RolloutSpecTemplateSpecInitContainersLivenessProbeExec {
            command?: string[];
        }

        export interface RolloutSpecTemplateSpecInitContainersLivenessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLivenessProbeHttpGetPort;
            scheme?: string;
        }

        export interface RolloutSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface RolloutSpecTemplateSpecInitContainersLivenessProbeHttpGetPort {
        }

        export interface RolloutSpecTemplateSpecInitContainersLivenessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersLivenessProbeTcpSocketPort;
        }

        export interface RolloutSpecTemplateSpecInitContainersLivenessProbeTcpSocketPort {
        }

        export interface RolloutSpecTemplateSpecInitContainersPorts {
            containerPort: number;
            hostIP?: string;
            hostPort?: number;
            name?: string;
            protocol?: string;
        }

        export interface RolloutSpecTemplateSpecInitContainersReadinessProbe {
            exec?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersReadinessProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersReadinessProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersReadinessProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface RolloutSpecTemplateSpecInitContainersReadinessProbeExec {
            command?: string[];
        }

        export interface RolloutSpecTemplateSpecInitContainersReadinessProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersReadinessProbeHttpGetPort;
            scheme?: string;
        }

        export interface RolloutSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface RolloutSpecTemplateSpecInitContainersReadinessProbeHttpGetPort {
        }

        export interface RolloutSpecTemplateSpecInitContainersReadinessProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersReadinessProbeTcpSocketPort;
        }

        export interface RolloutSpecTemplateSpecInitContainersReadinessProbeTcpSocketPort {
        }

        export interface RolloutSpecTemplateSpecInitContainersSecurityContext {
            allowPrivilegeEscalation?: boolean;
            capabilities?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersSecurityContextCapabilities;
            privileged?: boolean;
            procMount?: string;
            readOnlyRootFilesystem?: boolean;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersSecurityContextSeLinuxOptions;
            windowsOptions?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersSecurityContextWindowsOptions;
        }

        export interface RolloutSpecTemplateSpecInitContainersSecurityContextCapabilities {
            add?: string[];
            drop?: string[];
        }

        export interface RolloutSpecTemplateSpecInitContainersSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface RolloutSpecTemplateSpecInitContainersSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface RolloutSpecTemplateSpecInitContainersStartupProbe {
            exec?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersStartupProbeExec;
            failureThreshold?: number;
            httpGet?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersStartupProbeHttpGet;
            initialDelaySeconds?: number;
            periodSeconds?: number;
            successThreshold?: number;
            tcpSocket?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersStartupProbeTcpSocket;
            timeoutSeconds?: number;
        }

        export interface RolloutSpecTemplateSpecInitContainersStartupProbeExec {
            command?: string[];
        }

        export interface RolloutSpecTemplateSpecInitContainersStartupProbeHttpGet {
            host?: string;
            httpHeaders?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeaders[];
            path?: string;
            port: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersStartupProbeHttpGetPort;
            scheme?: string;
        }

        export interface RolloutSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeaders {
            name: string;
            value: string;
        }

        export interface RolloutSpecTemplateSpecInitContainersStartupProbeHttpGetPort {
        }

        export interface RolloutSpecTemplateSpecInitContainersStartupProbeTcpSocket {
            host?: string;
            port: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecInitContainersStartupProbeTcpSocketPort;
        }

        export interface RolloutSpecTemplateSpecInitContainersStartupProbeTcpSocketPort {
        }

        export interface RolloutSpecTemplateSpecInitContainersVolumeDevices {
            devicePath: string;
            name: string;
        }

        export interface RolloutSpecTemplateSpecInitContainersVolumeMounts {
            mountPath: string;
            mountPropagation?: string;
            name: string;
            readOnly?: boolean;
            subPath?: string;
            subPathExpr?: string;
        }

        export interface RolloutSpecTemplateSpecOverhead {
        }

        export interface RolloutSpecTemplateSpecReadinessGates {
            conditionType: string;
        }

        export interface RolloutSpecTemplateSpecSecurityContext {
            fsGroup?: number;
            fsGroupChangePolicy?: string;
            runAsGroup?: number;
            runAsNonRoot?: boolean;
            runAsUser?: number;
            seLinuxOptions?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecSecurityContextSeLinuxOptions;
            supplementalGroups?: number[];
            sysctls?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecSecurityContextSysctls[];
            windowsOptions?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecSecurityContextWindowsOptions;
        }

        export interface RolloutSpecTemplateSpecSecurityContextSeLinuxOptions {
            level?: string;
            role?: string;
            type?: string;
            user?: string;
        }

        export interface RolloutSpecTemplateSpecSecurityContextSysctls {
            name: string;
            value: string;
        }

        export interface RolloutSpecTemplateSpecSecurityContextWindowsOptions {
            gmsaCredentialSpec?: string;
            gmsaCredentialSpecName?: string;
            runAsUserName?: string;
        }

        export interface RolloutSpecTemplateSpecTolerations {
            effect?: string;
            key?: string;
            operator?: string;
            tolerationSeconds?: number;
            value?: string;
        }

        export interface RolloutSpecTemplateSpecTopologySpreadConstraints {
            labelSelector?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecTopologySpreadConstraintsLabelSelector;
            maxSkew: number;
            topologyKey: string;
            whenUnsatisfiable: string;
        }

        export interface RolloutSpecTemplateSpecTopologySpreadConstraintsLabelSelector {
            matchExpressions?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressions[];
            matchLabels?: {[key: string]: string};
        }

        export interface RolloutSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressions {
            key: string;
            operator: string;
            values?: string[];
        }

        export interface RolloutSpecTemplateSpecVolumes {
            awsElasticBlockStore?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesAwsElasticBlockStore;
            azureDisk?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesAzureDisk;
            azureFile?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesAzureFile;
            cephfs?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesCephfs;
            cinder?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesCinder;
            csi?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesCsi;
            emptyDir?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesEmptyDir;
            fc?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesFc;
            flexVolume?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesFlexVolume;
            flocker?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesFlocker;
            gcePersistentDisk?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesGcePersistentDisk;
            gitRepo?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesGitRepo;
            glusterfs?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesGlusterfs;
            hostPath?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesHostPath;
            iscsi?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesIscsi;
            name: string;
            nfs?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesNfs;
            persistentVolumeClaim?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesPersistentVolumeClaim;
            photonPersistentDisk?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesPhotonPersistentDisk;
            portworxVolume?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesPortworxVolume;
            projected?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesProjected;
            quobyte?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesQuobyte;
            rbd?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesRbd;
            scaleIO?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesScaleIO;
            storageos?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesStorageos;
            vsphereVolume?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesVsphereVolume;
        }

        export interface RolloutSpecTemplateSpecVolumesAwsElasticBlockStore {
            fsType?: string;
            partition?: number;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface RolloutSpecTemplateSpecVolumesAzureDisk {
            cachingMode?: string;
            diskName: string;
            diskURI: string;
            fsType?: string;
            kind?: string;
            readOnly?: boolean;
        }

        export interface RolloutSpecTemplateSpecVolumesAzureFile {
            readOnly?: boolean;
            secretName: string;
            shareName: string;
        }

        export interface RolloutSpecTemplateSpecVolumesCephfs {
            monitors: string[];
            path?: string;
            readOnly?: boolean;
            secretFile?: string;
            secretRef?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesCephfsSecretRef;
            user?: string;
        }

        export interface RolloutSpecTemplateSpecVolumesCephfsSecretRef {
            name?: string;
        }

        export interface RolloutSpecTemplateSpecVolumesCinder {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesCinderSecretRef;
            volumeID: string;
        }

        export interface RolloutSpecTemplateSpecVolumesCinderSecretRef {
            name?: string;
        }

        export interface RolloutSpecTemplateSpecVolumesCsi {
            driver: string;
            fsType?: string;
            nodePublishSecretRef?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesCsiNodePublishSecretRef;
            readOnly?: boolean;
            volumeAttributes?: {[key: string]: string};
        }

        export interface RolloutSpecTemplateSpecVolumesCsiNodePublishSecretRef {
            name?: string;
        }

        export interface RolloutSpecTemplateSpecVolumesEmptyDir {
            medium?: string;
            sizeLimit?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesEmptyDirSizeLimit;
        }

        export interface RolloutSpecTemplateSpecVolumesEmptyDirSizeLimit {
        }

        export interface RolloutSpecTemplateSpecVolumesFc {
            fsType?: string;
            lun?: number;
            readOnly?: boolean;
            targetWWNs?: string[];
            wwids?: string[];
        }

        export interface RolloutSpecTemplateSpecVolumesFlexVolume {
            driver: string;
            fsType?: string;
            options?: {[key: string]: string};
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesFlexVolumeSecretRef;
        }

        export interface RolloutSpecTemplateSpecVolumesFlexVolumeSecretRef {
            name?: string;
        }

        export interface RolloutSpecTemplateSpecVolumesFlocker {
            datasetName?: string;
            datasetUUID?: string;
        }

        export interface RolloutSpecTemplateSpecVolumesGcePersistentDisk {
            fsType?: string;
            partition?: number;
            pdName: string;
            readOnly?: boolean;
        }

        export interface RolloutSpecTemplateSpecVolumesGitRepo {
            directory?: string;
            repository: string;
            revision?: string;
        }

        export interface RolloutSpecTemplateSpecVolumesGlusterfs {
            endpoints: string;
            path: string;
            readOnly?: boolean;
        }

        export interface RolloutSpecTemplateSpecVolumesHostPath {
            path: string;
            type?: string;
        }

        export interface RolloutSpecTemplateSpecVolumesIscsi {
            chapAuthDiscovery?: boolean;
            chapAuthSession?: boolean;
            fsType?: string;
            initiatorName?: string;
            iqn: string;
            iscsiInterface?: string;
            lun: number;
            portals?: string[];
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesIscsiSecretRef;
            targetPortal: string;
        }

        export interface RolloutSpecTemplateSpecVolumesIscsiSecretRef {
            name?: string;
        }

        export interface RolloutSpecTemplateSpecVolumesNfs {
            path: string;
            readOnly?: boolean;
            server: string;
        }

        export interface RolloutSpecTemplateSpecVolumesPersistentVolumeClaim {
            claimName: string;
            readOnly?: boolean;
        }

        export interface RolloutSpecTemplateSpecVolumesPhotonPersistentDisk {
            fsType?: string;
            pdID: string;
        }

        export interface RolloutSpecTemplateSpecVolumesPortworxVolume {
            fsType?: string;
            readOnly?: boolean;
            volumeID: string;
        }

        export interface RolloutSpecTemplateSpecVolumesProjected {
            defaultMode?: number;
            sources: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesProjectedSources[];
        }

        export interface RolloutSpecTemplateSpecVolumesProjectedSources {
            serviceAccountToken?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken;
        }

        export interface RolloutSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken {
            audience?: string;
            expirationSeconds?: number;
            path: string;
        }

        export interface RolloutSpecTemplateSpecVolumesQuobyte {
            group?: string;
            readOnly?: boolean;
            registry: string;
            tenant?: string;
            user?: string;
            volume: string;
        }

        export interface RolloutSpecTemplateSpecVolumesRbd {
            fsType?: string;
            image: string;
            keyring?: string;
            monitors: string[];
            pool?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesRbdSecretRef;
            user?: string;
        }

        export interface RolloutSpecTemplateSpecVolumesRbdSecretRef {
            name?: string;
        }

        export interface RolloutSpecTemplateSpecVolumesScaleIO {
            fsType?: string;
            gateway: string;
            protectionDomain?: string;
            readOnly?: boolean;
            secretRef: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesScaleIOSecretRef;
            sslEnabled?: boolean;
            storageMode?: string;
            storagePool?: string;
            system: string;
            volumeName?: string;
        }

        export interface RolloutSpecTemplateSpecVolumesScaleIOSecretRef {
            name?: string;
        }

        export interface RolloutSpecTemplateSpecVolumesStorageos {
            fsType?: string;
            readOnly?: boolean;
            secretRef?: outputs.argoproj.v1alpha1.RolloutSpecTemplateSpecVolumesStorageosSecretRef;
            volumeName?: string;
            volumeNamespace?: string;
        }

        export interface RolloutSpecTemplateSpecVolumesStorageosSecretRef {
            name?: string;
        }

        export interface RolloutSpecTemplateSpecVolumesVsphereVolume {
            fsType?: string;
            storagePolicyID?: string;
            storagePolicyName?: string;
            volumePath: string;
        }

        export interface RolloutStatus {
            HPAReplicas?: number;
            abort?: boolean;
            abortedAt?: string;
            availableReplicas?: number;
            blueGreen?: outputs.argoproj.v1alpha1.RolloutStatusBlueGreen;
            canary?: outputs.argoproj.v1alpha1.RolloutStatusCanary;
            collisionCount?: number;
            conditions?: outputs.argoproj.v1alpha1.RolloutStatusConditions[];
            controllerPause?: boolean;
            currentPodHash?: string;
            currentStepHash?: string;
            currentStepIndex?: number;
            observedGeneration?: string;
            pauseConditions?: outputs.argoproj.v1alpha1.RolloutStatusPauseConditions[];
            promoteFull?: boolean;
            readyReplicas?: number;
            replicas?: number;
            restartedAt?: string;
            selector?: string;
            stableRS?: string;
            updatedReplicas?: number;
        }

        export interface RolloutStatusBlueGreen {
            activeSelector?: string;
            postPromotionAnalysisRun?: string;
            postPromotionAnalysisRunStatus?: outputs.argoproj.v1alpha1.RolloutStatusBlueGreenPostPromotionAnalysisRunStatus;
            prePromotionAnalysisRun?: string;
            prePromotionAnalysisRunStatus?: outputs.argoproj.v1alpha1.RolloutStatusBlueGreenPrePromotionAnalysisRunStatus;
            previewSelector?: string;
            previousActiveSelector?: string;
            scaleDownDelayStartTime?: string;
            scaleUpPreviewCheckPoint?: boolean;
        }

        export interface RolloutStatusBlueGreenPostPromotionAnalysisRunStatus {
            message?: string;
            name: string;
            status: string;
        }

        export interface RolloutStatusBlueGreenPrePromotionAnalysisRunStatus {
            message?: string;
            name: string;
            status: string;
        }

        export interface RolloutStatusCanary {
            currentBackgroundAnalysisRun?: string;
            currentBackgroundAnalysisRunStatus?: outputs.argoproj.v1alpha1.RolloutStatusCanaryCurrentBackgroundAnalysisRunStatus;
            currentExperiment?: string;
            currentStepAnalysisRun?: string;
            currentStepAnalysisRunStatus?: outputs.argoproj.v1alpha1.RolloutStatusCanaryCurrentStepAnalysisRunStatus;
        }

        export interface RolloutStatusCanaryCurrentBackgroundAnalysisRunStatus {
            message?: string;
            name: string;
            status: string;
        }

        export interface RolloutStatusCanaryCurrentStepAnalysisRunStatus {
            message?: string;
            name: string;
            status: string;
        }

        export interface RolloutStatusConditions {
            lastTransitionTime: string;
            lastUpdateTime: string;
            message: string;
            reason: string;
            status: string;
            type: string;
        }

        export interface RolloutStatusPauseConditions {
            reason: string;
            startTime: string;
        }
    }
}
